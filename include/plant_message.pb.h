/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_PROTOBUFS_PLANT_MESSAGE_PB_H_INCLUDED
#define PB_PROTOBUFS_PLANT_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Plants { 
    pb_callback_t plants;
} Plants;

typedef struct _Plant { 
    int32_t soil;
    int32_t light;
} Plant;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Plant_init_default                       {0, 0}
#define Plants_init_default                      {{{NULL}, NULL}}
#define Plant_init_zero                          {0, 0}
#define Plants_init_zero                         {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Plants_plants_tag                        10
#define Plant_soil_tag                           1
#define Plant_light_tag                          2

/* Struct field encoding specification for nanopb */
#define Plant_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    soil,              1) \
X(a, STATIC,   REQUIRED, INT32,    light,             2)
#define Plant_CALLBACK NULL
#define Plant_DEFAULT NULL

#define Plants_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  plants,           10)
#define Plants_CALLBACK pb_default_field_callback
#define Plants_DEFAULT NULL
#define Plants_plants_MSGTYPE Plant

extern const pb_msgdesc_t Plant_msg;
extern const pb_msgdesc_t Plants_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Plant_fields &Plant_msg
#define Plants_fields &Plants_msg

/* Maximum encoded size of messages (where known) */
/* Plants_size depends on runtime parameters */
#define Plant_size                               22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
